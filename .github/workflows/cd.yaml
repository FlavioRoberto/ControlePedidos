name: Deploy to EKS

on:
  pull_request:
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 
   
    - name: Configure kubectl
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPONAME }}:latest .
      working-directory: src/app  # Path to your Dockerfile

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPONAME }}:latest

    - name: Deploy to EKS using Helm
      run: |
        # Instala o Helm no GitHub Actions
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

        # Adiciona o repositório Helm que você deseja usar (opcional)
        helm repo add stable https://charts.helm.sh/stable

        # Atualiza os repositórios Helm (opcional)
        helm repo update

        # Instala ou atualiza os charts do Helm no cluster EKS
        helm upgrade --install my-release path/to/your/helm/chart --namespace my-namespace \
          --set some.key=some.value,another.key=another.value
      # env:
      #   KUBECONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  
